    .container {
        width: 100%;
        max-width: @container_width;
        margin: 0 auto;
        padding-right: @container_padding_right;
        padding-left: @container_padding_left;

        &:after {
            content: " ";
            display: block;
            clear: both;
        }
    }


    .center {
        float:none !important;
        margin: 0 auto !important;
    }
    .content {
        min-height: 20px;
        overflow:hidden;
    }

    .bleed {
        padding: 0;
    }

    &.right {
        text-align: right;
    }

    .attach_bottom {
        position: absolute;
        bottom: 0;
    }

    .content{
        margin: 0 -15px;
    }

    [class*='small-'],[class*='medium-'],[class*='large-']{
        padding: 15px;

        [class*='small-'],[class*='medium-'],[class*='large-']{
            padding: 0;
        }
    }

    ////////////////////////////
    //Mobile Settings for Grid//
    ////////////////////////////

    .small-{
            &full{
                width: 100%;
                float: left;
            }

            .mid.fourth {
                width: 50%;
            }

            .mid.half {
                width: 50% !important;
            }

            .make-half(2);
            &half{
                width: 50%;
                float: left;
            }
            .make-half(@n, @i: 1) when (@i =< @n) {
              &half-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-half(@n, (@i + 1));
            }

            .make-third(3);
            &third{
                width: 33.33333333%;
                float: left;
            }
            .make-third(@n, @i: 1) when (@i =< @n) {
              &third-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-third(@n, (@i + 1));
            }

            .make-fourth(4);
            &fourth{
                width: 25%;
                float: left;
            }
            .make-fourth(@n, @i: 1) when (@i =< @n) {

              &fourth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-fourth(@n, (@i + 1));
            }

            .make-fifth(5);
            &fifth{
                width: 20%;
                float: left;
            }
            .make-fifth(@n, @i: 1) when (@i =< @n) {

              &fifth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-fifth(@n, (@i + 1));
            }

            .make-sixth(6);
            &sixth{
                width: 16.66666667%;
                float: left;
            }
            .make-sixth(@n, @i: 1) when (@i =< @n) {

              &sixth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-sixth(@n, (@i + 1));
            }

            .make-seventh(7);
            &seventh{
                width: 14.28571429%;
                float: left;
            }
            .make-seventh(@n, @i: 1) when (@i =< @n) {

              &seventh-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-seventh(@n, (@i + 1));
            }

            .make-eighth(8);
            &eighth{
                width: 12.5%;
                float: left;
            }
            .make-eighth(@n, @i: 1) when (@i =< @n) {

              &eighth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-eighth(@n, (@i + 1));
            }

            .make-ninth(9);
            &ninth{
                width: 11.11111111%;
                float: left;
            }
            .make-ninth(@n, @i: 1) when (@i =< @n) {

              &ninth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-ninth(@n, (@i + 1));
            }

            .make-tenth(10);
            &tenth{
                width: 10%;
                float: left;
            }
            .make-tenth(@n, @i: 1) when (@i =< @n) {

              &tenth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-tenth(@n, (@i + 1));
            }
        
    }



    @media (max-width: @breakpoint_small) {
        .half-small{
            width: 50% !important;
            float: left;
        }
    }
    ////////////////////////////
    //Tablet Settings for Grid//
    ////////////////////////////
    @media (min-width: @breakpoint_small) {

        .medium-{

            &full{
                width: 100%;
                float: left;
            }
            .mid.fourth {
                width: 50%;
            }

            .mid.half {
                width: 50% !important;
            }

            .make-half(2);
            &half{
                width: 50%;
                float: left;
            }
            .make-half(@n, @i: 1) when (@i =< @n) {
              &half-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-half(@n, (@i + 1));
            }

            .make-third(3);
            &third{
                width: 33.33333333%;
                float: left;
            }
            .make-third(@n, @i: 1) when (@i =< @n) {
              &third-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-third(@n, (@i + 1));
            }

            .make-fourth(4);
            &fourth{
                width: 25%;
                float: left;
            }
            .make-fourth(@n, @i: 1) when (@i =< @n) {

              &fourth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-fourth(@n, (@i + 1));
            }

            .make-fifth(5);
            &fifth{
                width: 20%;
                float: left;
            }
            .make-fifth(@n, @i: 1) when (@i =< @n) {

              &fifth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-fifth(@n, (@i + 1));
            }

            .make-sixth(6);
            &sixth{
                width: 16.66666667%;
                float: left;
            }
            .make-sixth(@n, @i: 1) when (@i =< @n) {

              &sixth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-sixth(@n, (@i + 1));
            }

            .make-seventh(7);
            &seventh{
                width: 14.28571429%;
                float: left;
            }
            .make-seventh(@n, @i: 1) when (@i =< @n) {

              &seventh-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-seventh(@n, (@i + 1));
            }

            .make-eighth(8);
            &eighth{
                width: 12.5%;
                float: left;
            }
            .make-eighth(@n, @i: 1) when (@i =< @n) {

              &eighth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-eighth(@n, (@i + 1));
            }

            .make-ninth(9);
            &ninth{
                width: 11.11111111%;
                float: left;
            }
            .make-ninth(@n, @i: 1) when (@i =< @n) {

              &ninth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-ninth(@n, (@i + 1));
            }

            .make-tenth(10);
            &tenth{
                width: 10%;
                float: left;
            }
            .make-tenth(@n, @i: 1) when (@i =< @n) {

              &tenth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-tenth(@n, (@i + 1));
            }
        }

    }

    @media (min-width: @breakpoint_medium) {

        .full{
            width: 100%;
        }

        .large-{

            &full{
                width: 100%;
                float: left;
            }

            .make-half(2);
            &half{
                width: 50%;
                float: left;
            }
            .make-half(@n, @i: 1) when (@i =< @n) {
              &half-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-half(@n, (@i + 1));
            }

            .make-third(3);
            &third{
                width: 33.33333333%;
                float: left;
            }
            .make-third(@n, @i: 1) when (@i =< @n) {
              &third-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-third(@n, (@i + 1));
            }

            .make-fourth(4);
            &fourth{
                width: 25%;
                float: left;
            }
            .make-fourth(@n, @i: 1) when (@i =< @n) {

              &fourth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-fourth(@n, (@i + 1));
            }

            .make-fifth(5);
            &fifth{
                width: 20%;
                float: left;
            }
            .make-fifth(@n, @i: 1) when (@i =< @n) {

              &fifth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-fifth(@n, (@i + 1));
            }

            .make-sixth(6);
            &sixth{
                width: 16.66666667%;
                float: left;
            }
            .make-sixth(@n, @i: 1) when (@i =< @n) {

              &sixth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-sixth(@n, (@i + 1));
            }

            .make-seventh(7);
            &seventh{
                width: 14.28571429%;
                float: left;
            }
            .make-seventh(@n, @i: 1) when (@i =< @n) {

              &seventh-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-seventh(@n, (@i + 1));
            }

            .make-eighth(8);
            &eighth{
                width: 12.5%;
                float: left;
            }
            .make-eighth(@n, @i: 1) when (@i =< @n) {

              &eighth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-eighth(@n, (@i + 1));
            }

            .make-ninth(9);
            &ninth{
                width: 11.11111111%;
                float: left;
            }
            .make-ninth(@n, @i: 1) when (@i =< @n) {

              &ninth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-ninth(@n, (@i + 1));
            }

            .make-tenth(10);
            &tenth{
                width: 10%;
                float: left;
            }
            .make-tenth(@n, @i: 1) when (@i =< @n) {

              &tenth-@{i} {
                width: (@i * 100% / @n);
                float: left;
              }
              .make-tenth(@n, (@i + 1));
            }
        }
    }


